# <type>: (If applied, this commit will...) <subject> (Max 50 char)
# |<----  Using a Maximum Of 50 Characters  ---->|

# Explain why this change is being made
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# Provide links or keys to any relevant tickets, articles or other resources
# Example: Github issue #23

# --- COMMIT END ---
# Type can be 
#    feat     : 一个新功能 (new feature)
#    fix      : 修复bug 
#    docs     : 修改文档 比如README.md、CHANGELOG.md等;
#    style    : 修改代码的格式，不影响代码运行的变动，比如空格、格式化代码、补齐句末分号等等;(formatting, missing semi colons, etc; no code change)
#    refactor : 代码的重构，没有新功能的添加以及bug修复的代码改动;
#    perf     : 优化代码以提高性能;
#    test     : 增加测试或优化改善现有的测试;
#    build    : 修改影响项目构建文件或外部依赖项，比如npm、gulp、webpack、broccoli等;
#    ci       : 修改CI配置文件和脚本;
#    chore    : 其他非src路径文件和测试文件的修改，比如.gitignore、.editorconfig等;
#    revert   : 代码回退;
# --------------------
# subject是commit的目的简单描述，不超过50个字符，结尾不需要句号。

# Body部分是对本次commit的详细描述，可以分为多行。
# Body部分应该说明代码变动的动机，以及与以前行为的对比。

# Footer部分主要用于两种情况：不兼容变动和处理Issue。
# Example:
#   Fixes #234
#   Closes # 234

# Remember to
#   - Capitalize the subject line
#   - Use the imperative mood in the subject line
#   - Do not end the subject line with a period
#   - Separate subject from body with a blank line
#   - Use the body to explain what and why vs. how
#   - Can use multiple lines with "-" for bullet points in body

unbind C-b
set -g prefix C-x
bind C-x send-prefix
bind x last-window
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",st-256color:RGB"

bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"

# show the status bar
bind h set-option -g status
set -g status-left-length 85
set -g status-left "working on#[fg=colour135] #S"
# set -g window-status-current-format "#[fg=black,bold bg=default]│#[fg=white bg=cyan]#W#[fg=black,bold bg=default]│"
set -g window-status-current-format "#[fg=blue,bold bg=default]│#[fg=colour13 bg=black]#W#[fg=blue,bold bg=default]│"
set -g status-style bg=default
set -g status-right "#{prefix_highlight} #[fg=cyan] #[bg=black] %b %d %Y %l:%M %p    "
# set -g status-right '#(gitmux "#{pane_current_path}")'
set -g status-justify centre

set-window-option -g mode-keys emacs
# Vim style
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# Emacs style
# xclip 与 xsel 不同，它在打印不适合当前语言环境的原始比特流时效果更好。
# 不过，使用 xsel 更简洁，因为 xclip 不会关闭 STDOUT在它从 tmux 缓冲区读取之后。
# 因此，tmux 不知道复制任务已经完成，并继续等待 xclip 终止，从而使 tmux 无响应。
# 一种解决方法是重定向 STDOUT至 /dev/null
bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
bind-key C-y run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
# bind-key -T copy-mode y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key C-y run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# 使用 Vim 风格的按键在窗格间移动
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key k kill-window
bind-key 0 kill-pane
bind-key 1 resize-pane -Z
bind-key 2 split-window -v -c "#{pane_current_path}"
bind-key 3 split-window -h -c "#{pane_current_path}"
bind-key b last-window

# pane transfrom in windows
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# 当您按下 tmux 前缀键时突出显示的插件
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

bind-key f run-shell -b /home/einsam/.config/tmux/plugins/tmux-fzf/main.sh
bind -n M-g display-popup -E "tmux new-session -A -s scratch"
TMUX_FZF_MENU=\
"foo\necho 'Hello!'\n"\
"bar\nls ~\n"\
"sh\nsh ~/test.sh\n"

# 保存和恢复tmux面板的内容
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
